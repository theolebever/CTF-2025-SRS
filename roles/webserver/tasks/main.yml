---
- name: Check if webserver files are on the target
  ansible.builtin.stat:
    path: ~/webserver/docker-compose.yml
  register: webserver_files

- name: Transfer Docker Compose files and Dockerfiles to target
  when: webserver_files.stat.exists == False
  ansible.builtin.copy:
    src: ./webserver
    dest: ~/
    remote_src: no

- name: Check if Docker service is running
  ansible.builtin.service_facts:
  register: service_facts

- name: Start Docker service
  when: service_facts.services['docker'].state != 'running'
  ansible.builtin.service:
    name: docker
    state: started
    
- name: Check if Docker containers are running
  ansible.builtin.command: docker ps
  register: docker_ps
  ignore_errors: true

- name: Stop Docker containers
  when: docker_ps is succeeded
  ansible.builtin.command: docker-compose down
  args:
    chdir: ~/webserver

- name: Remove Docker containers
  when: docker_ps is succeeded
  ansible.builtin.command: docker rm -f $(docker ps -a -q)
  args:
    chdir: ~/webserver

- name: Remove Docker images
  when: docker_ps is succeeded
  ansible.builtin.command: docker rmi -f $(docker images -q)
  args:
    chdir: ~/webserver

- name: Remove Docker volumes
  when: docker_ps is succeeded
  ansible.builtin.command: docker volume prune -f
  args:
    chdir: ~/webserver

- name: Remove Docker networks
  when: docker_ps is succeeded
  ansible.builtin.command: docker network prune -f
  args:
    chdir: ~/webserver
  
- name: Start Docker containers
  ansible.builtin.command: docker-compose up -d
  args:
    chdir: ~/webserver

